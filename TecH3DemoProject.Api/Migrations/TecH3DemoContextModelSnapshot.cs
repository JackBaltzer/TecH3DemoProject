// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TecH3DemoProject.Api.Database;

namespace TecH3DemoProject.Api.Migrations
{
    [DbContext(typeof(TecH3DemoContext))]
    partial class TecH3DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TecH3DemoProject.Api.Domain.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Albert",
                            LastName = "Andersen",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 501, DateTimeKind.Local).AddTicks(4485)
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Benjamin",
                            LastName = "Billiard",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 505, DateTimeKind.Local).AddTicks(7412)
                        });
                });

            modelBuilder.Entity("TecH3DemoProject.Api.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<DateTime>("Publised")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            Pages = 123,
                            Publised = new DateTime(2020, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "All The Books",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 530, DateTimeKind.Local).AddTicks(9273)
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            Pages = 321,
                            Publised = new DateTime(2021, 12, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Books are fun",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 530, DateTimeKind.Local).AddTicks(9418)
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 1,
                            Pages = 32,
                            Publised = new DateTime(2021, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Alphabet",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 530, DateTimeKind.Local).AddTicks(9435)
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            Pages = 91,
                            Publised = new DateTime(1993, 12, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Bingo Bullshot",
                            createdAt = new DateTime(2021, 6, 2, 21, 57, 11, 530, DateTimeKind.Local).AddTicks(9445)
                        });
                });

            modelBuilder.Entity("TecH3DemoProject.Api.Domain.Book", b =>
                {
                    b.HasOne("TecH3DemoProject.Api.Domain.Author", null)
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TecH3DemoProject.Api.Domain.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
